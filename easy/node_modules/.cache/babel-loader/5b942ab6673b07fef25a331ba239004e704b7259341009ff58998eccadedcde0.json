{"ast":null,"code":"var _jsxFileName = \"/Users/nursudevar/Desktop/react-app/easy/src/Components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo.form\",\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Update your item\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add a Todo\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"Zsufmjz+XKtgfHD/V36BRcTk+PI=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoForm","props","_s","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","children","placeholder","onChange","name","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nursudevar/Desktop/react-app/easy/src/Components/TodoForm.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\n\nconst TodoForm = (props) => {\n\n    const [input, setInput] = useState(props.edit ? props.edit.value: \"\");\n\n    const inputRef = useRef(null);\n\n    useEffect( () => {\n      inputRef.current.focus();\n\n    });\n\n    const handleChange = (e) => {\n      setInput(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n\n      props.onSubmit({\n        id: Math.floor(Math.random()*10000),\n        text: input,\n      });\n\n      setInput(\"\");\n    };\n  return (\n    <form onSubmit={handleSubmit} className=\"todo.form\">\n     {props.edit ? (\n      <>\n      <input placeholder=\"Update your item\" value={input} onChange={handleChange} name=\"text\" ref={inputRef}\n      className=\"todo-input edit\"/>\n      <button onClick={handleSubmit} className=\"todo-button edit\">Update</button>\n      </>\n     \n     )\n     :\n      (\n        <>\n        <input placeholder=\"Add a Todo\" value={input} onChange={handleChange} name=\"text\" ref={inputRef} className=\"todo-input\"/>\n        <button onClick={handleSubmit} className=\"todo-button\">Add Todo</button>\n\n        </>\n\n      )}\n    </form>\n  )\n}\n\nexport default TodoForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACO,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACI,IAAI,CAACC,KAAK,GAAE,EAAE,CAAC;EAErE,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE7BF,SAAS,CAAE,MAAM;IACfc,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;EAE1B,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMO,YAAY,GAAIF,CAAC,IAAK;IAC1BA,CAAC,CAACG,cAAc,CAAC,CAAC;IAElBb,KAAK,CAACc,QAAQ,CAAC;MACbC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,KAAK,CAAC;MACnCC,IAAI,EAAEjB;IACR,CAAC,CAAC;IAEFC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EACH,oBACEP,OAAA;IAAMkB,QAAQ,EAAEF,YAAa;IAACQ,SAAS,EAAC,WAAW;IAAAC,QAAA,EACjDrB,KAAK,CAACI,IAAI,gBACVR,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACAzB,OAAA;QAAO0B,WAAW,EAAC,kBAAkB;QAACjB,KAAK,EAAEH,KAAM;QAACqB,QAAQ,EAAEd,YAAa;QAACe,IAAI,EAAC,MAAM;QAACC,GAAG,EAAEnB,QAAS;QACtGc,SAAS,EAAC;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7BjC,OAAA;QAAQkC,OAAO,EAAElB,YAAa;QAACQ,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACzE,CAAC,gBAKDjC,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACAzB,OAAA;QAAO0B,WAAW,EAAC,YAAY;QAACjB,KAAK,EAAEH,KAAM;QAACqB,QAAQ,EAAEd,YAAa;QAACe,IAAI,EAAC,MAAM;QAACC,GAAG,EAAEnB,QAAS;QAACc,SAAS,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzHjC,OAAA;QAAQkC,OAAO,EAAElB,YAAa;QAACQ,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAEtE;EAEH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAA5B,EAAA,CA9CKF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAgDd,eAAeA,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}